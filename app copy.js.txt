import { Project } from './js/project.js'

/** @type {AudioContext} */
export const ctx = new AudioContext()

/** @type {Project} */
var proj

let clock
let clockEvent

async function init() {
  console.log('### Starting')
  console.log(`### Audio state ${ctx.state}`)
  proj = new Project()
  await proj.load()
  clock = new WAAClock(ctx)
  clock.start()
}

function play() {
  console.log('### Play')
  if (clockEvent) {
    return
  }

  if (ctx.state === 'suspended') ctx.resume()

  proj.patterns[0].currentStep = 0
  clockEvent = clock
    .callbackAtTime(() => {
      proj.patterns[0].tick()
    }, ctx.currentTime)
    .tolerance({ early: 0.02, late: 0.02 })
    .repeat(0.12)
}

function stop() {
  if (!clockEvent) return

  clockEvent.clear()
  proj.patterns[0].currentStep = 0

  clockEvent = null
}

window.addEventListener('load', init)
document.querySelector('#playBtn').addEventListener('click', play)
document.querySelector('#stopBtn').addEventListener('click', stop)
